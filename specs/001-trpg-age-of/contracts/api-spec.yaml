openapi: 3.0.3
info:
  title: Age of Hero キャラクターシート API
  description: Age of Hero TRPG キャラクターシート管理システムのREST API
  version: 0.1.0
  contact:
    name: Age of Hero システム
servers:
  - url: https://api.age-of-hero.example.com
    description: プロダクション環境
  - url: http://localhost:3000
    description: ローカル開発環境

paths:
  /api/game-data:
    get:
      summary: ゲームデータ取得
      description: クラス、スキル、アイテム等のマスターデータを取得
      tags:
        - GameData
      responses:
        '200':
          description: ゲームデータ取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameDataResponse'

  /api/characters:
    post:
      summary: キャラクター作成
      description: 新しいキャラクターを作成し、一意のIDを発行
      tags:
        - Character
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCharacterRequest'
      responses:
        '201':
          description: キャラクター作成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCharacterResponse'
        '400':
          description: バリデーションエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/characters/{id}:
    get:
      summary: キャラクター取得
      description: キャラクターIDを使用してキャラクター情報を取得
      tags:
        - Character
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: password
          in: query
          description: パスワード保護されている場合のパスワード
          required: false
          schema:
            type: string
      responses:
        '200':
          description: キャラクター取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CharacterResponse'
        '400':
          description: 不正なUUID形式
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: パスワード認証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: キャラクターが見つからない
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      summary: キャラクター更新
      description: キャラクターのセッション情報を追加・更新
      tags:
        - Character
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCharacterRequest'
      responses:
        '200':
          description: キャラクター更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CharacterResponse'
        '400':
          description: バリデーションエラー（不正なUUID形式含む）
        '401':
          description: パスワード認証エラー
        '404':
          description: キャラクターが見つからない

components:
  schemas:
    GameDataResponse:
      type: object
      properties:
        classes:
          type: array
          items:
            $ref: '#/components/schemas/ClassData'
        skills:
          type: array
          items:
            $ref: '#/components/schemas/SkillData'
        heroSkills:
          type: array
          items:
            $ref: '#/components/schemas/HeroSkillData'
        items:
          type: array
          items:
            $ref: '#/components/schemas/ItemData'

    ClassData:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: 'マッスル'
        physicalBase:
          type: integer
          minimum: 0
        reflexBase:
          type: integer
          minimum: 0
        sensoryBase:
          type: integer
          minimum: 0
        intellectualBase:
          type: integer
          minimum: 0
        supernaturalBase:
          type: integer
          minimum: 0
        hpBase:
          type: integer
          minimum: 1
        spBase:
          type: integer
          minimum: 1
        description:
          type: string

    SkillData:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: 'パワー'
        category:
          type: string
          enum: ['physical', 'reflex', 'sensory', 'intellectual']
        description:
          type: string
        order:
          type: integer

    HeroSkillData:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: '《パワードライブ》'
        maxLevel:
          type: integer
          minimum: 1
        timing:
          type: string
          example: 'メジャーアクション'
        skill:
          type: string
          example: '白兵攻撃'
        target:
          type: string
          example: '単体'
        range:
          type: string
          example: '武器'
        cost:
          type: integer
          minimum: 0
        effect:
          type: string
        classRestriction:
          type: array
          items:
            type: string
          nullable: true

    ItemData:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: '射撃武器Ａ'
        type:
          type: string
          enum: ['白兵', '射撃', '白兵/射撃', '防具', '消耗品', 'その他']
          example: '射撃'
        skill:
          type: string
          nullable: true
          example: '〈射撃〉'
          description: '武器の対応技能'
        modifier:
          type: string
          nullable: true
          example: '＋０％'
          description: '武器の修正値'
        attackPower:
          type: string
          nullable: true
          example: '＋５'
          description: '武器の攻撃力'
        guardValue:
          type: string
          nullable: true
          example: '０'
          description: '武器のガード値'
        range:
          type: string
          nullable: true
          example: '近'
          description: '武器の射程 (至近/近/中/遠)'
        dodge:
          type: string
          nullable: true
          example: '＋０％'
          description: '防具のドッジ修正'
        actionValue:
          type: string
          nullable: true
          example: '＋０'
          description: '防具の行動値修正'
        protection:
          type: string
          nullable: true
          example: '５'
          description: '防具の防護点'
        price:
          type: integer
          minimum: 0
          example: 6
          description: '価格 (0=常備化不可または価格なし)'
        effect:
          type: string
          nullable: true
          example: 'マイナーアクション、メジャーアクションで使用可能。ＨＰを２Ｄ点回復する。'
          description: 'アイテムの効果説明'
        quantity:
          type: integer
          nullable: true
          minimum: 1
          description: '消耗品の数量'

    CreateCharacterRequest:
      type: object
      required:
        - name
        - selectedClasses
        - skillAllocations
        - heroSkills
        - specialAttacks
        - items
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
          example: '山田太郎'
        selectedClasses:
          type: array
          items:
            type: string
          minItems: 2
          maxItems: 2
          description: '選択した2つのクラスID (重複可)'
        abilityBonus:
          type: string
          enum:
            ['physical', 'reflex', 'sensory', 'intellectual', 'supernatural']
          description: '能力値+1ボーナスの適用先'
        skillAllocations:
          type: object
          additionalProperties:
            type: integer
          description: '技能名 → 割り振りポイントのマップ'
        heroSkills:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: 'パワードライブ'
              level:
                type: integer
                minimum: 1
              maxLevel:
                type: integer
                minimum: 1
              timing:
                type: string
                example: 'メジャーアクション'
              skill:
                type: string
                example: '白兵攻撃'
              target:
                type: string
                example: '単体'
              range:
                type: string
                example: '武器'
              cost:
                type: integer
                minimum: 0
              effect:
                type: string
        specialAttacks:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: '能力暴走'
              level:
                type: integer
                minimum: 1
              maxLevel:
                type: integer
                minimum: 1
              timing:
                type: string
                example: 'スタートプロセス'
              skill:
                type: string
                example: 'なし'
              target:
                type: string
                example: '自身'
              range:
                type: string
                example: 'なし'
              cost:
                type: integer
                minimum: 0
              effect:
                type: string
        items:
          type: array
          items:
            type: string
        password:
          type: string
          nullable: true
          description: 'オプションのパスワード'

    CreateCharacterResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        url:
          type: string
          example: '/character/123e4567-e89b-12d3-a456-426614174000'

    CharacterResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        physicalAbility:
          type: integer
        reflexAbility:
          type: integer
        sensoryAbility:
          type: integer
        intellectualAbility:
          type: integer
        supernaturalAbility:
          type: integer
        hp:
          type: integer
        sp:
          type: integer
        actionValue:
          type: integer
        sessions:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              sessionName:
                type: string
              gmName:
                type: string
              sessionDate:
                type: string
                format: date
              currentHp:
                type: integer
                minimum: 0
              currentSp:
                type: integer
                minimum: 0
              currentFc:
                type: integer
                minimum: 0
                nullable: true
              experiencePoints:
                type: integer
                minimum: 0
              memo:
                type: string
                nullable: true
              createdAt:
                type: string
                format: date-time
        classes:
          type: array
          items:
            $ref: '#/components/schemas/ClassData'
        skills:
          type: array
          items:
            type: object
            properties:
              skill:
                $ref: '#/components/schemas/SkillData'
              baseValue:
                type: integer
              allocatedPoints:
                type: integer
              totalValue:
                type: integer
        heroSkills:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: 'パワードライブ'
              level:
                type: integer
                minimum: 1
              maxLevel:
                type: integer
                minimum: 1
              timing:
                type: string
                example: 'メジャーアクション'
              skill:
                type: string
                example: '白兵攻撃'
              target:
                type: string
                example: '単体'
              range:
                type: string
                example: '武器'
              cost:
                type: integer
                minimum: 0
              effect:
                type: string
        specialAttacks:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: '能力暴走'
              level:
                type: integer
                minimum: 1
              maxLevel:
                type: integer
                minimum: 1
              timing:
                type: string
                example: 'スタートプロセス'
              skill:
                type: string
                example: 'なし'
              target:
                type: string
                example: '自身'
              range:
                type: string
                example: 'なし'
              cost:
                type: integer
                minimum: 0
              effect:
                type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/ItemData'
        isPasswordProtected:
          type: boolean

    UpdateCharacterRequest:
      type: object
      properties:
        session:
          type: object
          properties:
            id:
              type: string
              format: uuid
            sessionName:
              type: string
            gmName:
              type: string
            sessionDate:
              type: string
              format: date
            currentHp:
              type: integer
              minimum: 0
            currentSp:
              type: integer
              minimum: 0
            currentFc:
              type: integer
              minimum: 0
              nullable: true
            experiencePoints:
              type: integer
              minimum: 0
            memo:
              type: string
              nullable: true
        password:
          type: string
          nullable: true
          description: 'パスワード保護されている場合のパスワード'

    SetPasswordRequest:
      type: object
      properties:
        currentPassword:
          type: string
          nullable: true
          description: '現在のパスワード (変更時のみ)'
        newPassword:
          type: string
          nullable: true
          description: '新しいパスワード (nullで保護解除)'

    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
              example: 'VALIDATION_ERROR'
            message:
              type: string
              example: 'バリデーションエラーが発生しました'
            details:
              type: array
              items:
                type: object
                properties:
                  field:
                    type: string
                  message:
                    type: string
